import whisper
import subprocess
import os

def transcrever_audio(caminho_audio: str) -> str:
    print("🔊 Carregando modelo Whisper e transcrevendo o áudio...")
    modelo = whisper.load_model("base")  # Pode trocar por "small", "medium", "large"
    resultado = modelo.transcribe(caminho_audio)
    return resultado["text"]

def gerar_pontos_chave(texto: str, modelo: str = "llama3") -> str:
    print("🧠 Enviando texto para o Ollama e extraindo pontos-chave...")
    prompt = f"""
A seguir está um texto transcrito de um áudio. Extraia os principais pontos-chave de forma clara e objetiva:

Texto:
{texto}

Pontos-chave:
"""
    comando = ["ollama", "run", modelo]
    processo = subprocess.Popen(
        comando,
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )
    saida, erro = processo.communicate(prompt)
    if erro:
        print("❌ Erro ao rodar o Ollama:", erro)
    return saida

def main():
    caminho_arquivo = input("📁 Digite o caminho do arquivo de áudio (.mp3 ou .wav): ").strip()

    if not os.path.exists(caminho_arquivo):
        print("❌ Arquivo não encontrado. Verifique o caminho e tente novamente.")
        return

    texto_transcrito = transcrever_audio(caminho_arquivo)
    print("\n📝 Transcrição:\n", texto_transcrito)

    pontos_chave = gerar_pontos_chave(texto_transcrito)
    print("\n🔍 Pontos-chave extraídos:\n", pontos_chave)

if __name__ == "__main__":
    main()
